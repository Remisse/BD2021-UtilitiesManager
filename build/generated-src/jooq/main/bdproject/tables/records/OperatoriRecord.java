/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Operatori;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OperatoriRecord extends UpdatableRecordImpl<OperatoriRecord> implements Record2<Integer, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.operatori.IdOperatore</code>.
     */
    public OperatoriRecord setIdoperatore(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.operatori.IdOperatore</code>.
     */
    public Integer getIdoperatore() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>utenze.operatori.Stipendio</code>.
     */
    public OperatoriRecord setStipendio(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.operatori.Stipendio</code>.
     */
    public BigDecimal getStipendio() {
        return (BigDecimal) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, BigDecimal> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, BigDecimal> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Operatori.OPERATORI.IDOPERATORE;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Operatori.OPERATORI.STIPENDIO;
    }

    @Override
    public Integer component1() {
        return getIdoperatore();
    }

    @Override
    public BigDecimal component2() {
        return getStipendio();
    }

    @Override
    public Integer value1() {
        return getIdoperatore();
    }

    @Override
    public BigDecimal value2() {
        return getStipendio();
    }

    @Override
    public OperatoriRecord value1(Integer value) {
        setIdoperatore(value);
        return this;
    }

    @Override
    public OperatoriRecord value2(BigDecimal value) {
        setStipendio(value);
        return this;
    }

    @Override
    public OperatoriRecord values(Integer value1, BigDecimal value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OperatoriRecord
     */
    public OperatoriRecord() {
        super(Operatori.OPERATORI);
    }

    /**
     * Create a detached, initialised OperatoriRecord
     */
    public OperatoriRecord(Integer idoperatore, BigDecimal stipendio) {
        super(Operatori.OPERATORI);

        setIdoperatore(idoperatore);
        setStipendio(stipendio);
    }

    /**
     * Create a detached, initialised OperatoriRecord
     */
    public OperatoriRecord(bdproject.tables.pojos.Operatori value) {
        super(Operatori.OPERATORI);

        if (value != null) {
            setIdoperatore(value.getIdoperatore());
            setStipendio(value.getStipendio());
        }
    }
}
