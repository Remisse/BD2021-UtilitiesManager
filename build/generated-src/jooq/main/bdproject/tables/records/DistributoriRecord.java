/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Distributori;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistributoriRecord extends UpdatableRecordImpl<DistributoriRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.distributori.Id</code>.
     */
    public DistributoriRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distributori.Id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>utenze.distributori.Nome</code>.
     */
    public DistributoriRecord setNome(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distributori.Nome</code>.
     */
    public String getNome() {
        return (String) get(1);
    }

    /**
     * Setter for <code>utenze.distributori.NumeroContatto</code>.
     */
    public DistributoriRecord setNumerocontatto(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distributori.NumeroContatto</code>.
     */
    public String getNumerocontatto() {
        return (String) get(2);
    }

    /**
     * Setter for <code>utenze.distributori.EmailContatto</code>.
     */
    public DistributoriRecord setEmailcontatto(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distributori.EmailContatto</code>.
     */
    public String getEmailcontatto() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Distributori.DISTRIBUTORI.ID;
    }

    @Override
    public Field<String> field2() {
        return Distributori.DISTRIBUTORI.NOME;
    }

    @Override
    public Field<String> field3() {
        return Distributori.DISTRIBUTORI.NUMEROCONTATTO;
    }

    @Override
    public Field<String> field4() {
        return Distributori.DISTRIBUTORI.EMAILCONTATTO;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getNome();
    }

    @Override
    public String component3() {
        return getNumerocontatto();
    }

    @Override
    public String component4() {
        return getEmailcontatto();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getNome();
    }

    @Override
    public String value3() {
        return getNumerocontatto();
    }

    @Override
    public String value4() {
        return getEmailcontatto();
    }

    @Override
    public DistributoriRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DistributoriRecord value2(String value) {
        setNome(value);
        return this;
    }

    @Override
    public DistributoriRecord value3(String value) {
        setNumerocontatto(value);
        return this;
    }

    @Override
    public DistributoriRecord value4(String value) {
        setEmailcontatto(value);
        return this;
    }

    @Override
    public DistributoriRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DistributoriRecord
     */
    public DistributoriRecord() {
        super(Distributori.DISTRIBUTORI);
    }

    /**
     * Create a detached, initialised DistributoriRecord
     */
    public DistributoriRecord(Integer id, String nome, String numerocontatto, String emailcontatto) {
        super(Distributori.DISTRIBUTORI);

        setId(id);
        setNome(nome);
        setNumerocontatto(numerocontatto);
        setEmailcontatto(emailcontatto);
    }

    /**
     * Create a detached, initialised DistributoriRecord
     */
    public DistributoriRecord(bdproject.tables.pojos.Distributori value) {
        super(Distributori.DISTRIBUTORI);

        if (value != null) {
            setId(value.getId());
            setNome(value.getNome());
            setNumerocontatto(value.getNumerocontatto());
            setEmailcontatto(value.getEmailcontatto());
        }
    }
}
