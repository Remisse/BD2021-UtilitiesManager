/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Redditi;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedditiRecord extends UpdatableRecordImpl<RedditiRecord> implements Record2<String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.redditi.Fascia</code>.
     */
    public RedditiRecord setFascia(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.redditi.Fascia</code>.
     */
    public String getFascia() {
        return (String) get(0);
    }

    /**
     * Setter for <code>utenze.redditi.Sconto</code>.
     */
    public RedditiRecord setSconto(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.redditi.Sconto</code>.
     */
    public BigDecimal getSconto() {
        return (BigDecimal) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, BigDecimal> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, BigDecimal> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Redditi.REDDITI.FASCIA;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Redditi.REDDITI.SCONTO;
    }

    @Override
    public String component1() {
        return getFascia();
    }

    @Override
    public BigDecimal component2() {
        return getSconto();
    }

    @Override
    public String value1() {
        return getFascia();
    }

    @Override
    public BigDecimal value2() {
        return getSconto();
    }

    @Override
    public RedditiRecord value1(String value) {
        setFascia(value);
        return this;
    }

    @Override
    public RedditiRecord value2(BigDecimal value) {
        setSconto(value);
        return this;
    }

    @Override
    public RedditiRecord values(String value1, BigDecimal value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RedditiRecord
     */
    public RedditiRecord() {
        super(Redditi.REDDITI);
    }

    /**
     * Create a detached, initialised RedditiRecord
     */
    public RedditiRecord(String fascia, BigDecimal sconto) {
        super(Redditi.REDDITI);

        setFascia(fascia);
        setSconto(sconto);
    }

    /**
     * Create a detached, initialised RedditiRecord
     */
    public RedditiRecord(bdproject.tables.pojos.Redditi value) {
        super(Redditi.REDDITI);

        if (value != null) {
            setFascia(value.getFascia());
            setSconto(value.getSconto());
        }
    }
}
