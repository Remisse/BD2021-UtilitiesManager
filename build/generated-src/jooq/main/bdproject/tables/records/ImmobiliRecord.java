/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Immobili;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImmobiliRecord extends UpdatableRecordImpl<ImmobiliRecord> implements Record8<Integer, String, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.immobili.IdImmobile</code>.
     */
    public ImmobiliRecord setIdimmobile(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.IdImmobile</code>.
     */
    public Integer getIdimmobile() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>utenze.immobili.Tipo</code>.
     */
    public ImmobiliRecord setTipo(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.Tipo</code>.
     */
    public String getTipo() {
        return (String) get(1);
    }

    /**
     * Setter for <code>utenze.immobili.Via</code>.
     */
    public ImmobiliRecord setVia(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.Via</code>.
     */
    public String getVia() {
        return (String) get(2);
    }

    /**
     * Setter for <code>utenze.immobili.NumCivico</code>.
     */
    public ImmobiliRecord setNumcivico(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.NumCivico</code>.
     */
    public String getNumcivico() {
        return (String) get(3);
    }

    /**
     * Setter for <code>utenze.immobili.Interno</code>.
     */
    public ImmobiliRecord setInterno(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.Interno</code>.
     */
    public String getInterno() {
        return (String) get(4);
    }

    /**
     * Setter for <code>utenze.immobili.Comune</code>.
     */
    public ImmobiliRecord setComune(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.Comune</code>.
     */
    public String getComune() {
        return (String) get(5);
    }

    /**
     * Setter for <code>utenze.immobili.Provincia</code>.
     */
    public ImmobiliRecord setProvincia(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.Provincia</code>.
     */
    public String getProvincia() {
        return (String) get(6);
    }

    /**
     * Setter for <code>utenze.immobili.CAP</code>.
     */
    public ImmobiliRecord setCap(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>utenze.immobili.CAP</code>.
     */
    public String getCap() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Immobili.IMMOBILI.IDIMMOBILE;
    }

    @Override
    public Field<String> field2() {
        return Immobili.IMMOBILI.TIPO;
    }

    @Override
    public Field<String> field3() {
        return Immobili.IMMOBILI.VIA;
    }

    @Override
    public Field<String> field4() {
        return Immobili.IMMOBILI.NUMCIVICO;
    }

    @Override
    public Field<String> field5() {
        return Immobili.IMMOBILI.INTERNO;
    }

    @Override
    public Field<String> field6() {
        return Immobili.IMMOBILI.COMUNE;
    }

    @Override
    public Field<String> field7() {
        return Immobili.IMMOBILI.PROVINCIA;
    }

    @Override
    public Field<String> field8() {
        return Immobili.IMMOBILI.CAP;
    }

    @Override
    public Integer component1() {
        return getIdimmobile();
    }

    @Override
    public String component2() {
        return getTipo();
    }

    @Override
    public String component3() {
        return getVia();
    }

    @Override
    public String component4() {
        return getNumcivico();
    }

    @Override
    public String component5() {
        return getInterno();
    }

    @Override
    public String component6() {
        return getComune();
    }

    @Override
    public String component7() {
        return getProvincia();
    }

    @Override
    public String component8() {
        return getCap();
    }

    @Override
    public Integer value1() {
        return getIdimmobile();
    }

    @Override
    public String value2() {
        return getTipo();
    }

    @Override
    public String value3() {
        return getVia();
    }

    @Override
    public String value4() {
        return getNumcivico();
    }

    @Override
    public String value5() {
        return getInterno();
    }

    @Override
    public String value6() {
        return getComune();
    }

    @Override
    public String value7() {
        return getProvincia();
    }

    @Override
    public String value8() {
        return getCap();
    }

    @Override
    public ImmobiliRecord value1(Integer value) {
        setIdimmobile(value);
        return this;
    }

    @Override
    public ImmobiliRecord value2(String value) {
        setTipo(value);
        return this;
    }

    @Override
    public ImmobiliRecord value3(String value) {
        setVia(value);
        return this;
    }

    @Override
    public ImmobiliRecord value4(String value) {
        setNumcivico(value);
        return this;
    }

    @Override
    public ImmobiliRecord value5(String value) {
        setInterno(value);
        return this;
    }

    @Override
    public ImmobiliRecord value6(String value) {
        setComune(value);
        return this;
    }

    @Override
    public ImmobiliRecord value7(String value) {
        setProvincia(value);
        return this;
    }

    @Override
    public ImmobiliRecord value8(String value) {
        setCap(value);
        return this;
    }

    @Override
    public ImmobiliRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ImmobiliRecord
     */
    public ImmobiliRecord() {
        super(Immobili.IMMOBILI);
    }

    /**
     * Create a detached, initialised ImmobiliRecord
     */
    public ImmobiliRecord(Integer idimmobile, String tipo, String via, String numcivico, String interno, String comune, String provincia, String cap) {
        super(Immobili.IMMOBILI);

        setIdimmobile(idimmobile);
        setTipo(tipo);
        setVia(via);
        setNumcivico(numcivico);
        setInterno(interno);
        setComune(comune);
        setProvincia(provincia);
        setCap(cap);
    }

    /**
     * Create a detached, initialised ImmobiliRecord
     */
    public ImmobiliRecord(bdproject.tables.pojos.Immobili value) {
        super(Immobili.IMMOBILI);

        if (value != null) {
            setIdimmobile(value.getIdimmobile());
            setTipo(value.getTipo());
            setVia(value.getVia());
            setNumcivico(value.getNumcivico());
            setInterno(value.getInterno());
            setComune(value.getComune());
            setProvincia(value.getProvincia());
            setCap(value.getCap());
        }
    }
}
