/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Pagamenti;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PagamentiRecord extends UpdatableRecordImpl<PagamentiRecord> implements Record2<Integer, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.pagamenti.NumeroBolletta</code>.
     */
    public PagamentiRecord setNumerobolletta(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.pagamenti.NumeroBolletta</code>.
     */
    public Integer getNumerobolletta() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>utenze.pagamenti.DataPagamento</code>.
     */
    public PagamentiRecord setDatapagamento(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.pagamenti.DataPagamento</code>.
     */
    public LocalDate getDatapagamento() {
        return (LocalDate) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, LocalDate> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, LocalDate> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Pagamenti.PAGAMENTI.NUMEROBOLLETTA;
    }

    @Override
    public Field<LocalDate> field2() {
        return Pagamenti.PAGAMENTI.DATAPAGAMENTO;
    }

    @Override
    public Integer component1() {
        return getNumerobolletta();
    }

    @Override
    public LocalDate component2() {
        return getDatapagamento();
    }

    @Override
    public Integer value1() {
        return getNumerobolletta();
    }

    @Override
    public LocalDate value2() {
        return getDatapagamento();
    }

    @Override
    public PagamentiRecord value1(Integer value) {
        setNumerobolletta(value);
        return this;
    }

    @Override
    public PagamentiRecord value2(LocalDate value) {
        setDatapagamento(value);
        return this;
    }

    @Override
    public PagamentiRecord values(Integer value1, LocalDate value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PagamentiRecord
     */
    public PagamentiRecord() {
        super(Pagamenti.PAGAMENTI);
    }

    /**
     * Create a detached, initialised PagamentiRecord
     */
    public PagamentiRecord(Integer numerobolletta, LocalDate datapagamento) {
        super(Pagamenti.PAGAMENTI);

        setNumerobolletta(numerobolletta);
        setDatapagamento(datapagamento);
    }

    /**
     * Create a detached, initialised PagamentiRecord
     */
    public PagamentiRecord(bdproject.tables.pojos.Pagamenti value) {
        super(Pagamenti.PAGAMENTI);

        if (value != null) {
            setNumerobolletta(value.getNumerobolletta());
            setDatapagamento(value.getDatapagamento());
        }
    }
}
