/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Distribuzioni;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DistribuzioniRecord extends UpdatableRecordImpl<DistribuzioniRecord> implements Record3<String, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.distribuzioni.MateriaPrima</code>.
     */
    public DistribuzioniRecord setMateriaprima(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distribuzioni.MateriaPrima</code>.
     */
    public String getMateriaprima() {
        return (String) get(0);
    }

    /**
     * Setter for <code>utenze.distribuzioni.IdZona</code>.
     */
    public DistribuzioniRecord setIdzona(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distribuzioni.IdZona</code>.
     */
    public Integer getIdzona() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>utenze.distribuzioni.IdDistributore</code>.
     */
    public DistribuzioniRecord setIddistributore(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>utenze.distribuzioni.IdDistributore</code>.
     */
    public Integer getIddistributore() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Distribuzioni.DISTRIBUZIONI.MATERIAPRIMA;
    }

    @Override
    public Field<Integer> field2() {
        return Distribuzioni.DISTRIBUZIONI.IDZONA;
    }

    @Override
    public Field<Integer> field3() {
        return Distribuzioni.DISTRIBUZIONI.IDDISTRIBUTORE;
    }

    @Override
    public String component1() {
        return getMateriaprima();
    }

    @Override
    public Integer component2() {
        return getIdzona();
    }

    @Override
    public Integer component3() {
        return getIddistributore();
    }

    @Override
    public String value1() {
        return getMateriaprima();
    }

    @Override
    public Integer value2() {
        return getIdzona();
    }

    @Override
    public Integer value3() {
        return getIddistributore();
    }

    @Override
    public DistribuzioniRecord value1(String value) {
        setMateriaprima(value);
        return this;
    }

    @Override
    public DistribuzioniRecord value2(Integer value) {
        setIdzona(value);
        return this;
    }

    @Override
    public DistribuzioniRecord value3(Integer value) {
        setIddistributore(value);
        return this;
    }

    @Override
    public DistribuzioniRecord values(String value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DistribuzioniRecord
     */
    public DistribuzioniRecord() {
        super(Distribuzioni.DISTRIBUZIONI);
    }

    /**
     * Create a detached, initialised DistribuzioniRecord
     */
    public DistribuzioniRecord(String materiaprima, Integer idzona, Integer iddistributore) {
        super(Distribuzioni.DISTRIBUZIONI);

        setMateriaprima(materiaprima);
        setIdzona(idzona);
        setIddistributore(iddistributore);
    }

    /**
     * Create a detached, initialised DistribuzioniRecord
     */
    public DistribuzioniRecord(bdproject.tables.pojos.Distribuzioni value) {
        super(Distribuzioni.DISTRIBUZIONI);

        if (value != null) {
            setMateriaprima(value.getMateriaprima());
            setIdzona(value.getIdzona());
            setIddistributore(value.getIddistributore());
        }
    }
}
