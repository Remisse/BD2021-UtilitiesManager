/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Letture;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LettureRecord extends UpdatableRecordImpl<LettureRecord> implements Record5<BigDecimal, Integer, LocalDate, Byte, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.letture.Consumi</code>.
     */
    public LettureRecord setConsumi(BigDecimal value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Consumi</code>.
     */
    public BigDecimal getConsumi() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>utenze.letture.Contatore</code>.
     */
    public LettureRecord setContatore(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Contatore</code>.
     */
    public Integer getContatore() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>utenze.letture.DataEffettuazione</code>.
     */
    public LettureRecord setDataeffettuazione(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.DataEffettuazione</code>.
     */
    public LocalDate getDataeffettuazione() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>utenze.letture.Confermata</code>.
     */
    public LettureRecord setConfermata(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Confermata</code>.
     */
    public Byte getConfermata() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>utenze.letture.Cliente</code>.
     */
    public LettureRecord setCliente(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Cliente</code>.
     */
    public Integer getCliente() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, LocalDate> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<BigDecimal, Integer, LocalDate, Byte, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<BigDecimal, Integer, LocalDate, Byte, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<BigDecimal> field1() {
        return Letture.LETTURE.CONSUMI;
    }

    @Override
    public Field<Integer> field2() {
        return Letture.LETTURE.CONTATORE;
    }

    @Override
    public Field<LocalDate> field3() {
        return Letture.LETTURE.DATAEFFETTUAZIONE;
    }

    @Override
    public Field<Byte> field4() {
        return Letture.LETTURE.CONFERMATA;
    }

    @Override
    public Field<Integer> field5() {
        return Letture.LETTURE.CLIENTE;
    }

    @Override
    public BigDecimal component1() {
        return getConsumi();
    }

    @Override
    public Integer component2() {
        return getContatore();
    }

    @Override
    public LocalDate component3() {
        return getDataeffettuazione();
    }

    @Override
    public Byte component4() {
        return getConfermata();
    }

    @Override
    public Integer component5() {
        return getCliente();
    }

    @Override
    public BigDecimal value1() {
        return getConsumi();
    }

    @Override
    public Integer value2() {
        return getContatore();
    }

    @Override
    public LocalDate value3() {
        return getDataeffettuazione();
    }

    @Override
    public Byte value4() {
        return getConfermata();
    }

    @Override
    public Integer value5() {
        return getCliente();
    }

    @Override
    public LettureRecord value1(BigDecimal value) {
        setConsumi(value);
        return this;
    }

    @Override
    public LettureRecord value2(Integer value) {
        setContatore(value);
        return this;
    }

    @Override
    public LettureRecord value3(LocalDate value) {
        setDataeffettuazione(value);
        return this;
    }

    @Override
    public LettureRecord value4(Byte value) {
        setConfermata(value);
        return this;
    }

    @Override
    public LettureRecord value5(Integer value) {
        setCliente(value);
        return this;
    }

    @Override
    public LettureRecord values(BigDecimal value1, Integer value2, LocalDate value3, Byte value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LettureRecord
     */
    public LettureRecord() {
        super(Letture.LETTURE);
    }

    /**
     * Create a detached, initialised LettureRecord
     */
    public LettureRecord(BigDecimal consumi, Integer contatore, LocalDate dataeffettuazione, Byte confermata, Integer cliente) {
        super(Letture.LETTURE);

        setConsumi(consumi);
        setContatore(contatore);
        setDataeffettuazione(dataeffettuazione);
        setConfermata(confermata);
        setCliente(cliente);
    }

    /**
     * Create a detached, initialised LettureRecord
     */
    public LettureRecord(bdproject.tables.pojos.Letture value) {
        super(Letture.LETTURE);

        if (value != null) {
            setConsumi(value.getConsumi());
            setContatore(value.getContatore());
            setDataeffettuazione(value.getDataeffettuazione());
            setConfermata(value.getConfermata());
            setCliente(value.getCliente());
        }
    }
}
