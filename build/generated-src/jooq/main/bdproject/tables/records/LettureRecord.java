/*
 * This file is generated by jOOQ.
 */
package bdproject.tables.records;


import bdproject.tables.Letture;

import java.math.BigDecimal;
import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LettureRecord extends UpdatableRecordImpl<LettureRecord> implements Record8<Integer, String, LocalDate, LocalDate, String, String, BigDecimal, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>utenze.letture.NumeroLettura</code>.
     */
    public LettureRecord setNumerolettura(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.NumeroLettura</code>.
     */
    public Integer getNumerolettura() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>utenze.letture.MatricolaContatore</code>.
     */
    public LettureRecord setMatricolacontatore(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.MatricolaContatore</code>.
     */
    public String getMatricolacontatore() {
        return (String) get(1);
    }

    /**
     * Setter for <code>utenze.letture.DataEffettuazione</code>.
     */
    public LettureRecord setDataeffettuazione(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.DataEffettuazione</code>.
     */
    public LocalDate getDataeffettuazione() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>utenze.letture.DataChiusuraRichiesta</code>.
     */
    public LettureRecord setDatachiusurarichiesta(LocalDate value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.DataChiusuraRichiesta</code>.
     */
    public LocalDate getDatachiusurarichiesta() {
        return (LocalDate) get(3);
    }

    /**
     * Setter for <code>utenze.letture.Stato</code>.
     */
    public LettureRecord setStato(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Stato</code>.
     */
    public String getStato() {
        return (String) get(4);
    }

    /**
     * Setter for <code>utenze.letture.Note</code>.
     */
    public LettureRecord setNote(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Note</code>.
     */
    public String getNote() {
        return (String) get(5);
    }

    /**
     * Setter for <code>utenze.letture.Consumi</code>.
     */
    public LettureRecord setConsumi(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.Consumi</code>.
     */
    public BigDecimal getConsumi() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>utenze.letture.IdCliente</code>.
     */
    public LettureRecord setIdcliente(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>utenze.letture.IdCliente</code>.
     */
    public Integer getIdcliente() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, LocalDate, LocalDate, String, String, BigDecimal, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, LocalDate, LocalDate, String, String, BigDecimal, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Letture.LETTURE.NUMEROLETTURA;
    }

    @Override
    public Field<String> field2() {
        return Letture.LETTURE.MATRICOLACONTATORE;
    }

    @Override
    public Field<LocalDate> field3() {
        return Letture.LETTURE.DATAEFFETTUAZIONE;
    }

    @Override
    public Field<LocalDate> field4() {
        return Letture.LETTURE.DATACHIUSURARICHIESTA;
    }

    @Override
    public Field<String> field5() {
        return Letture.LETTURE.STATO;
    }

    @Override
    public Field<String> field6() {
        return Letture.LETTURE.NOTE;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Letture.LETTURE.CONSUMI;
    }

    @Override
    public Field<Integer> field8() {
        return Letture.LETTURE.IDCLIENTE;
    }

    @Override
    public Integer component1() {
        return getNumerolettura();
    }

    @Override
    public String component2() {
        return getMatricolacontatore();
    }

    @Override
    public LocalDate component3() {
        return getDataeffettuazione();
    }

    @Override
    public LocalDate component4() {
        return getDatachiusurarichiesta();
    }

    @Override
    public String component5() {
        return getStato();
    }

    @Override
    public String component6() {
        return getNote();
    }

    @Override
    public BigDecimal component7() {
        return getConsumi();
    }

    @Override
    public Integer component8() {
        return getIdcliente();
    }

    @Override
    public Integer value1() {
        return getNumerolettura();
    }

    @Override
    public String value2() {
        return getMatricolacontatore();
    }

    @Override
    public LocalDate value3() {
        return getDataeffettuazione();
    }

    @Override
    public LocalDate value4() {
        return getDatachiusurarichiesta();
    }

    @Override
    public String value5() {
        return getStato();
    }

    @Override
    public String value6() {
        return getNote();
    }

    @Override
    public BigDecimal value7() {
        return getConsumi();
    }

    @Override
    public Integer value8() {
        return getIdcliente();
    }

    @Override
    public LettureRecord value1(Integer value) {
        setNumerolettura(value);
        return this;
    }

    @Override
    public LettureRecord value2(String value) {
        setMatricolacontatore(value);
        return this;
    }

    @Override
    public LettureRecord value3(LocalDate value) {
        setDataeffettuazione(value);
        return this;
    }

    @Override
    public LettureRecord value4(LocalDate value) {
        setDatachiusurarichiesta(value);
        return this;
    }

    @Override
    public LettureRecord value5(String value) {
        setStato(value);
        return this;
    }

    @Override
    public LettureRecord value6(String value) {
        setNote(value);
        return this;
    }

    @Override
    public LettureRecord value7(BigDecimal value) {
        setConsumi(value);
        return this;
    }

    @Override
    public LettureRecord value8(Integer value) {
        setIdcliente(value);
        return this;
    }

    @Override
    public LettureRecord values(Integer value1, String value2, LocalDate value3, LocalDate value4, String value5, String value6, BigDecimal value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LettureRecord
     */
    public LettureRecord() {
        super(Letture.LETTURE);
    }

    /**
     * Create a detached, initialised LettureRecord
     */
    public LettureRecord(Integer numerolettura, String matricolacontatore, LocalDate dataeffettuazione, LocalDate datachiusurarichiesta, String stato, String note, BigDecimal consumi, Integer idcliente) {
        super(Letture.LETTURE);

        setNumerolettura(numerolettura);
        setMatricolacontatore(matricolacontatore);
        setDataeffettuazione(dataeffettuazione);
        setDatachiusurarichiesta(datachiusurarichiesta);
        setStato(stato);
        setNote(note);
        setConsumi(consumi);
        setIdcliente(idcliente);
    }

    /**
     * Create a detached, initialised LettureRecord
     */
    public LettureRecord(bdproject.tables.pojos.Letture value) {
        super(Letture.LETTURE);

        if (value != null) {
            setNumerolettura(value.getNumerolettura());
            setMatricolacontatore(value.getMatricolacontatore());
            setDataeffettuazione(value.getDataeffettuazione());
            setDatachiusurarichiesta(value.getDatachiusurarichiesta());
            setStato(value.getStato());
            setNote(value.getNote());
            setConsumi(value.getConsumi());
            setIdcliente(value.getIdcliente());
        }
    }
}
