/*
 * This file is generated by jOOQ.
 */
package bdproject.tables;


import bdproject.Keys;
import bdproject.Utenze;
import bdproject.tables.records.RichiesteCessazioneRecord;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.jooq.Check;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RichiesteCessazione extends TableImpl<RichiesteCessazioneRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>utenze.richieste_cessazione</code>
     */
    public static final RichiesteCessazione RICHIESTE_CESSAZIONE = new RichiesteCessazione();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RichiesteCessazioneRecord> getRecordType() {
        return RichiesteCessazioneRecord.class;
    }

    /**
     * The column <code>utenze.richieste_cessazione.Numero</code>.
     */
    public final TableField<RichiesteCessazioneRecord, Integer> NUMERO = createField(DSL.name("Numero"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>utenze.richieste_cessazione.DataRichiesta</code>.
     */
    public final TableField<RichiesteCessazioneRecord, LocalDate> DATARICHIESTA = createField(DSL.name("DataRichiesta"), SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>utenze.richieste_cessazione.Esito</code>.
     */
    public final TableField<RichiesteCessazioneRecord, String> ESITO = createField(DSL.name("Esito"), SQLDataType.CHAR(1), this, "");

    /**
     * The column <code>utenze.richieste_cessazione.Note</code>.
     */
    public final TableField<RichiesteCessazioneRecord, String> NOTE = createField(DSL.name("Note"), SQLDataType.VARCHAR(200).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>utenze.richieste_cessazione.Operatore</code>.
     */
    public final TableField<RichiesteCessazioneRecord, Integer> OPERATORE = createField(DSL.name("Operatore"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>utenze.richieste_cessazione.IdContratto</code>.
     */
    public final TableField<RichiesteCessazioneRecord, Integer> IDCONTRATTO = createField(DSL.name("IdContratto"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>utenze.richieste_cessazione.Cliente</code>.
     */
    public final TableField<RichiesteCessazioneRecord, Integer> CLIENTE = createField(DSL.name("Cliente"), SQLDataType.INTEGER.nullable(false), this, "");

    private RichiesteCessazione(Name alias, Table<RichiesteCessazioneRecord> aliased) {
        this(alias, aliased, null);
    }

    private RichiesteCessazione(Name alias, Table<RichiesteCessazioneRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>utenze.richieste_cessazione</code> table
     * reference
     */
    public RichiesteCessazione(String alias) {
        this(DSL.name(alias), RICHIESTE_CESSAZIONE);
    }

    /**
     * Create an aliased <code>utenze.richieste_cessazione</code> table
     * reference
     */
    public RichiesteCessazione(Name alias) {
        this(alias, RICHIESTE_CESSAZIONE);
    }

    /**
     * Create a <code>utenze.richieste_cessazione</code> table reference
     */
    public RichiesteCessazione() {
        this(DSL.name("richieste_cessazione"), null);
    }

    public <O extends Record> RichiesteCessazione(Table<O> child, ForeignKey<O, RichiesteCessazioneRecord> key) {
        super(child, key, RICHIESTE_CESSAZIONE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Utenze.UTENZE;
    }

    @Override
    public Identity<RichiesteCessazioneRecord, Integer> getIdentity() {
        return (Identity<RichiesteCessazioneRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<RichiesteCessazioneRecord> getPrimaryKey() {
        return Keys.KEY_RICHIESTE_CESSAZIONE_PRIMARY;
    }

    @Override
    public List<ForeignKey<RichiesteCessazioneRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK_RICHIESTA_ESITO, Keys.FK_TERMINAZIONE, Keys.FK_RICHIESTA_CESS);
    }

    private transient Operatori _operatori;
    private transient Contratti _contratti;
    private transient Clienti _clienti;

    public Operatori operatori() {
        if (_operatori == null)
            _operatori = new Operatori(this, Keys.FK_RICHIESTA_ESITO);

        return _operatori;
    }

    public Contratti contratti() {
        if (_contratti == null)
            _contratti = new Contratti(this, Keys.FK_TERMINAZIONE);

        return _contratti;
    }

    public Clienti clienti() {
        if (_clienti == null)
            _clienti = new Clienti(this, Keys.FK_RICHIESTA_CESS);

        return _clienti;
    }

    @Override
    public List<Check<RichiesteCessazioneRecord>> getChecks() {
        return Arrays.asList(
            Internal.createCheck(this, DSL.name("richieste_cessazione_chk_1"), "((`Esito` is null) or (`Esito` in (_utf8mb4\\'A\\',_utf8mb4\\'R\\')))", true)
        );
    }

    @Override
    public RichiesteCessazione as(String alias) {
        return new RichiesteCessazione(DSL.name(alias), this);
    }

    @Override
    public RichiesteCessazione as(Name alias) {
        return new RichiesteCessazione(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RichiesteCessazione rename(String name) {
        return new RichiesteCessazione(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RichiesteCessazione rename(Name name) {
        return new RichiesteCessazione(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, LocalDate, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}
