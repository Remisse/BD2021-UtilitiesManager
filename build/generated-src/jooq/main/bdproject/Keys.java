/*
 * This file is generated by jOOQ.
 */
package bdproject;


import bdproject.tables.Bollette;
import bdproject.tables.Cessazioni;
import bdproject.tables.Clienti;
import bdproject.tables.Compatibilità;
import bdproject.tables.Contatori;
import bdproject.tables.Contratti;
import bdproject.tables.Immobili;
import bdproject.tables.Letture;
import bdproject.tables.MateriePrime;
import bdproject.tables.Offerte;
import bdproject.tables.Operatori;
import bdproject.tables.OperatoriCessazioni;
import bdproject.tables.OperatoriContratti;
import bdproject.tables.OperatoriLetture;
import bdproject.tables.Pagamenti;
import bdproject.tables.Persone;
import bdproject.tables.Redditi;
import bdproject.tables.TipiAttivazione;
import bdproject.tables.TipologieUso;
import bdproject.tables.records.BolletteRecord;
import bdproject.tables.records.CessazioniRecord;
import bdproject.tables.records.ClientiRecord;
import bdproject.tables.records.CompatibilitàRecord;
import bdproject.tables.records.ContatoriRecord;
import bdproject.tables.records.ContrattiRecord;
import bdproject.tables.records.ImmobiliRecord;
import bdproject.tables.records.LettureRecord;
import bdproject.tables.records.MateriePrimeRecord;
import bdproject.tables.records.OfferteRecord;
import bdproject.tables.records.OperatoriCessazioniRecord;
import bdproject.tables.records.OperatoriContrattiRecord;
import bdproject.tables.records.OperatoriLettureRecord;
import bdproject.tables.records.OperatoriRecord;
import bdproject.tables.records.PagamentiRecord;
import bdproject.tables.records.PersoneRecord;
import bdproject.tables.records.RedditiRecord;
import bdproject.tables.records.TipiAttivazioneRecord;
import bdproject.tables.records.TipologieUsoRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * utenze.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BolletteRecord> KEY_BOLLETTE_PRIMARY = Internal.createUniqueKey(Bollette.BOLLETTE, DSL.name("KEY_bollette_PRIMARY"), new TableField[] { Bollette.BOLLETTE.NUMEROBOLLETTA }, true);
    public static final UniqueKey<CessazioniRecord> KEY_CESSAZIONI_PRIMARY = Internal.createUniqueKey(Cessazioni.CESSAZIONI, DSL.name("KEY_cessazioni_PRIMARY"), new TableField[] { Cessazioni.CESSAZIONI.NUMERORICHIESTA }, true);
    public static final UniqueKey<ClientiRecord> KEY_CLIENTI_PRIMARY = Internal.createUniqueKey(Clienti.CLIENTI, DSL.name("KEY_clienti_PRIMARY"), new TableField[] { Clienti.CLIENTI.CODICECLIENTE }, true);
    public static final UniqueKey<CompatibilitàRecord> KEY_COMPATIBILITÀ_PRIMARY = Internal.createUniqueKey(Compatibilità.COMPATIBILITÀ, DSL.name("KEY_compatibilità_PRIMARY"), new TableField[] { Compatibilità.COMPATIBILITÀ.OFFERTA, Compatibilità.COMPATIBILITÀ.USO }, true);
    public static final UniqueKey<ContatoriRecord> KEY_CONTATORI_AK_CONTATORI = Internal.createUniqueKey(Contatori.CONTATORI, DSL.name("KEY_contatori_AK_CONTATORI"), new TableField[] { Contatori.CONTATORI.IDIMMOBILE, Contatori.CONTATORI.MATERIAPRIMA }, true);
    public static final UniqueKey<ContatoriRecord> KEY_CONTATORI_PRIMARY = Internal.createUniqueKey(Contatori.CONTATORI, DSL.name("KEY_contatori_PRIMARY"), new TableField[] { Contatori.CONTATORI.MATRICOLA }, true);
    public static final UniqueKey<ContrattiRecord> KEY_CONTRATTI_PRIMARY = Internal.createUniqueKey(Contratti.CONTRATTI, DSL.name("KEY_contratti_PRIMARY"), new TableField[] { Contratti.CONTRATTI.IDCONTRATTO }, true);
    public static final UniqueKey<ImmobiliRecord> KEY_IMMOBILI_AK_IMMOBILE = Internal.createUniqueKey(Immobili.IMMOBILI, DSL.name("KEY_immobili_AK_IMMOBILE"), new TableField[] { Immobili.IMMOBILI.TIPO, Immobili.IMMOBILI.VIA, Immobili.IMMOBILI.NUMCIVICO, Immobili.IMMOBILI.INTERNO, Immobili.IMMOBILI.COMUNE, Immobili.IMMOBILI.PROVINCIA, Immobili.IMMOBILI.CAP }, true);
    public static final UniqueKey<ImmobiliRecord> KEY_IMMOBILI_PRIMARY = Internal.createUniqueKey(Immobili.IMMOBILI, DSL.name("KEY_immobili_PRIMARY"), new TableField[] { Immobili.IMMOBILI.IDIMMOBILE }, true);
    public static final UniqueKey<LettureRecord> KEY_LETTURE_AK_LETTURE = Internal.createUniqueKey(Letture.LETTURE, DSL.name("KEY_letture_AK_LETTURE"), new TableField[] { Letture.LETTURE.MATRICOLACONTATORE, Letture.LETTURE.DATAEFFETTUAZIONE }, true);
    public static final UniqueKey<LettureRecord> KEY_LETTURE_PRIMARY = Internal.createUniqueKey(Letture.LETTURE, DSL.name("KEY_letture_PRIMARY"), new TableField[] { Letture.LETTURE.NUMEROLETTURA }, true);
    public static final UniqueKey<MateriePrimeRecord> KEY_MATERIE_PRIME_PRIMARY = Internal.createUniqueKey(MateriePrime.MATERIE_PRIME, DSL.name("KEY_materie_prime_PRIMARY"), new TableField[] { MateriePrime.MATERIE_PRIME.NOME }, true);
    public static final UniqueKey<OfferteRecord> KEY_OFFERTE_PRIMARY = Internal.createUniqueKey(Offerte.OFFERTE, DSL.name("KEY_offerte_PRIMARY"), new TableField[] { Offerte.OFFERTE.CODOFFERTA }, true);
    public static final UniqueKey<OperatoriRecord> KEY_OPERATORI_PRIMARY = Internal.createUniqueKey(Operatori.OPERATORI, DSL.name("KEY_operatori_PRIMARY"), new TableField[] { Operatori.OPERATORI.IDOPERATORE }, true);
    public static final UniqueKey<OperatoriCessazioniRecord> KEY_OPERATORI_CESSAZIONI_PRIMARY = Internal.createUniqueKey(OperatoriCessazioni.OPERATORI_CESSAZIONI, DSL.name("KEY_operatori cessazioni_PRIMARY"), new TableField[] { OperatoriCessazioni.OPERATORI_CESSAZIONI.NUMERORICHIESTA }, true);
    public static final UniqueKey<OperatoriContrattiRecord> KEY_OPERATORI_CONTRATTI_PRIMARY = Internal.createUniqueKey(OperatoriContratti.OPERATORI_CONTRATTI, DSL.name("KEY_operatori contratti_PRIMARY"), new TableField[] { OperatoriContratti.OPERATORI_CONTRATTI.NUMERORICHIESTA }, true);
    public static final UniqueKey<OperatoriLettureRecord> KEY_OPERATORI_LETTURE_PRIMARY = Internal.createUniqueKey(OperatoriLetture.OPERATORI_LETTURE, DSL.name("KEY_operatori letture_PRIMARY"), new TableField[] { OperatoriLetture.OPERATORI_LETTURE.LETTURA }, true);
    public static final UniqueKey<PagamentiRecord> KEY_PAGAMENTI_PRIMARY = Internal.createUniqueKey(Pagamenti.PAGAMENTI, DSL.name("KEY_pagamenti_PRIMARY"), new TableField[] { Pagamenti.PAGAMENTI.NUMEROBOLLETTA }, true);
    public static final UniqueKey<PersoneRecord> KEY_PERSONE_AK_PERSONA = Internal.createUniqueKey(Persone.PERSONE, DSL.name("KEY_persone_AK_PERSONA"), new TableField[] { Persone.PERSONE.EMAIL }, true);
    public static final UniqueKey<PersoneRecord> KEY_PERSONE_PRIMARY = Internal.createUniqueKey(Persone.PERSONE, DSL.name("KEY_persone_PRIMARY"), new TableField[] { Persone.PERSONE.IDPERSONA }, true);
    public static final UniqueKey<RedditiRecord> KEY_REDDITI_AK_REDDITI = Internal.createUniqueKey(Redditi.REDDITI, DSL.name("KEY_redditi_AK_REDDITI"), new TableField[] { Redditi.REDDITI.FASCIA }, true);
    public static final UniqueKey<RedditiRecord> KEY_REDDITI_PRIMARY = Internal.createUniqueKey(Redditi.REDDITI, DSL.name("KEY_redditi_PRIMARY"), new TableField[] { Redditi.REDDITI.CODREDDITO }, true);
    public static final UniqueKey<TipiAttivazioneRecord> KEY_TIPI_ATTIVAZIONE_PRIMARY = Internal.createUniqueKey(TipiAttivazione.TIPI_ATTIVAZIONE, DSL.name("KEY_tipi_attivazione_PRIMARY"), new TableField[] { TipiAttivazione.TIPI_ATTIVAZIONE.CODATTIVAZIONE }, true);
    public static final UniqueKey<TipologieUsoRecord> KEY_TIPOLOGIE_USO_PRIMARY = Internal.createUniqueKey(TipologieUso.TIPOLOGIE_USO, DSL.name("KEY_tipologie_uso_PRIMARY"), new TableField[] { TipologieUso.TIPOLOGIE_USO.CODUSO }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BolletteRecord, ContrattiRecord> FK_CONTRATTO = Internal.createForeignKey(Bollette.BOLLETTE, DSL.name("FK_CONTRATTO"), new TableField[] { Bollette.BOLLETTE.IDCONTRATTO }, Keys.KEY_CONTRATTI_PRIMARY, new TableField[] { Contratti.CONTRATTI.IDCONTRATTO }, true);
    public static final ForeignKey<BolletteRecord, OperatoriRecord> FK_EMISSIONE = Internal.createForeignKey(Bollette.BOLLETTE, DSL.name("FK_EMISSIONE"), new TableField[] { Bollette.BOLLETTE.IDOPERATORE }, Keys.KEY_OPERATORI_PRIMARY, new TableField[] { Operatori.OPERATORI.IDOPERATORE }, true);
    public static final ForeignKey<CessazioniRecord, ContrattiRecord> FK_RIFERIMENTO = Internal.createForeignKey(Cessazioni.CESSAZIONI, DSL.name("FK_RIFERIMENTO"), new TableField[] { Cessazioni.CESSAZIONI.IDCONTRATTO }, Keys.KEY_CONTRATTI_PRIMARY, new TableField[] { Contratti.CONTRATTI.IDCONTRATTO }, true);
    public static final ForeignKey<ClientiRecord, PersoneRecord> FK_CODICECLIENTE = Internal.createForeignKey(Clienti.CLIENTI, DSL.name("FK_CODICECLIENTE"), new TableField[] { Clienti.CLIENTI.CODICECLIENTE }, Keys.KEY_PERSONE_PRIMARY, new TableField[] { Persone.PERSONE.IDPERSONA }, true);
    public static final ForeignKey<ClientiRecord, RedditiRecord> FK_POSSEDIMENTO = Internal.createForeignKey(Clienti.CLIENTI, DSL.name("FK_POSSEDIMENTO"), new TableField[] { Clienti.CLIENTI.FASCIAREDDITO }, Keys.KEY_REDDITI_PRIMARY, new TableField[] { Redditi.REDDITI.CODREDDITO }, true);
    public static final ForeignKey<CompatibilitàRecord, OfferteRecord> FK_OFFERTAUSO = Internal.createForeignKey(Compatibilità.COMPATIBILITÀ, DSL.name("FK_OFFERTAUSO"), new TableField[] { Compatibilità.COMPATIBILITÀ.OFFERTA }, Keys.KEY_OFFERTE_PRIMARY, new TableField[] { Offerte.OFFERTE.CODOFFERTA }, true);
    public static final ForeignKey<CompatibilitàRecord, TipologieUsoRecord> FK_USOOFFERTA = Internal.createForeignKey(Compatibilità.COMPATIBILITÀ, DSL.name("FK_USOOFFERTA"), new TableField[] { Compatibilità.COMPATIBILITÀ.USO }, Keys.KEY_TIPOLOGIE_USO_PRIMARY, new TableField[] { TipologieUso.TIPOLOGIE_USO.CODUSO }, true);
    public static final ForeignKey<ContatoriRecord, ImmobiliRecord> FK_INSTALLAZIONE = Internal.createForeignKey(Contatori.CONTATORI, DSL.name("FK_INSTALLAZIONE"), new TableField[] { Contatori.CONTATORI.IDIMMOBILE }, Keys.KEY_IMMOBILI_PRIMARY, new TableField[] { Immobili.IMMOBILI.IDIMMOBILE }, true);
    public static final ForeignKey<ContatoriRecord, MateriePrimeRecord> FK_MISURAZIONE = Internal.createForeignKey(Contatori.CONTATORI, DSL.name("FK_MISURAZIONE"), new TableField[] { Contatori.CONTATORI.MATERIAPRIMA }, Keys.KEY_MATERIE_PRIME_PRIMARY, new TableField[] { MateriePrime.MATERIE_PRIME.NOME }, true);
    public static final ForeignKey<ContrattiRecord, TipiAttivazioneRecord> FK_ATTIVAZIONE_TRAMITE = Internal.createForeignKey(Contratti.CONTRATTI, DSL.name("FK_ATTIVAZIONE_TRAMITE"), new TableField[] { Contratti.CONTRATTI.TIPOATTIVAZIONE }, Keys.KEY_TIPI_ATTIVAZIONE_PRIMARY, new TableField[] { TipiAttivazione.TIPI_ATTIVAZIONE.CODATTIVAZIONE }, true);
    public static final ForeignKey<ContrattiRecord, ImmobiliRecord> FK_COLLEGAMENTO = Internal.createForeignKey(Contratti.CONTRATTI, DSL.name("FK_COLLEGAMENTO"), new TableField[] { Contratti.CONTRATTI.IDIMMOBILE }, Keys.KEY_IMMOBILI_PRIMARY, new TableField[] { Immobili.IMMOBILI.IDIMMOBILE }, true);
    public static final ForeignKey<ContrattiRecord, ClientiRecord> FK_RICHIESTA = Internal.createForeignKey(Contratti.CONTRATTI, DSL.name("FK_RICHIESTA"), new TableField[] { Contratti.CONTRATTI.IDCLIENTE }, Keys.KEY_CLIENTI_PRIMARY, new TableField[] { Clienti.CLIENTI.CODICECLIENTE }, true);
    public static final ForeignKey<ContrattiRecord, OfferteRecord> FK_SOTTOSCRIZIONE = Internal.createForeignKey(Contratti.CONTRATTI, DSL.name("FK_SOTTOSCRIZIONE"), new TableField[] { Contratti.CONTRATTI.OFFERTA }, Keys.KEY_OFFERTE_PRIMARY, new TableField[] { Offerte.OFFERTE.CODOFFERTA }, true);
    public static final ForeignKey<ContrattiRecord, TipologieUsoRecord> FK_USO = Internal.createForeignKey(Contratti.CONTRATTI, DSL.name("FK_USO"), new TableField[] { Contratti.CONTRATTI.USO }, Keys.KEY_TIPOLOGIE_USO_PRIMARY, new TableField[] { TipologieUso.TIPOLOGIE_USO.CODUSO }, true);
    public static final ForeignKey<LettureRecord, ContatoriRecord> FK_CORRISPONDENZA = Internal.createForeignKey(Letture.LETTURE, DSL.name("FK_CORRISPONDENZA"), new TableField[] { Letture.LETTURE.MATRICOLACONTATORE }, Keys.KEY_CONTATORI_PRIMARY, new TableField[] { Contatori.CONTATORI.MATRICOLA }, true);
    public static final ForeignKey<LettureRecord, PersoneRecord> FK_EFFETTUAZIONE = Internal.createForeignKey(Letture.LETTURE, DSL.name("FK_EFFETTUAZIONE"), new TableField[] { Letture.LETTURE.IDPERSONA }, Keys.KEY_PERSONE_PRIMARY, new TableField[] { Persone.PERSONE.IDPERSONA }, true);
    public static final ForeignKey<OfferteRecord, MateriePrimeRecord> FK_INTERESSE = Internal.createForeignKey(Offerte.OFFERTE, DSL.name("FK_INTERESSE"), new TableField[] { Offerte.OFFERTE.MATERIAPRIMA }, Keys.KEY_MATERIE_PRIME_PRIMARY, new TableField[] { MateriePrime.MATERIE_PRIME.NOME }, true);
    public static final ForeignKey<OperatoriRecord, PersoneRecord> FK_DATIANAGRAFICI = Internal.createForeignKey(Operatori.OPERATORI, DSL.name("FK_DATIANAGRAFICI"), new TableField[] { Operatori.OPERATORI.IDOPERATORE }, Keys.KEY_PERSONE_PRIMARY, new TableField[] { Persone.PERSONE.IDPERSONA }, true);
    public static final ForeignKey<OperatoriCessazioniRecord, CessazioniRecord> FK_GESTIONE_CC1 = Internal.createForeignKey(OperatoriCessazioni.OPERATORI_CESSAZIONI, DSL.name("FK_GESTIONE_CC1"), new TableField[] { OperatoriCessazioni.OPERATORI_CESSAZIONI.NUMERORICHIESTA }, Keys.KEY_CESSAZIONI_PRIMARY, new TableField[] { Cessazioni.CESSAZIONI.NUMERORICHIESTA }, true);
    public static final ForeignKey<OperatoriCessazioniRecord, OperatoriRecord> FK_GESTIONE_CO1 = Internal.createForeignKey(OperatoriCessazioni.OPERATORI_CESSAZIONI, DSL.name("FK_GESTIONE_CO1"), new TableField[] { OperatoriCessazioni.OPERATORI_CESSAZIONI.IDOPERATORE }, Keys.KEY_OPERATORI_PRIMARY, new TableField[] { Operatori.OPERATORI.IDOPERATORE }, true);
    public static final ForeignKey<OperatoriContrattiRecord, ContrattiRecord> FK_GESTIONE_CC2 = Internal.createForeignKey(OperatoriContratti.OPERATORI_CONTRATTI, DSL.name("FK_GESTIONE_CC2"), new TableField[] { OperatoriContratti.OPERATORI_CONTRATTI.NUMERORICHIESTA }, Keys.KEY_CONTRATTI_PRIMARY, new TableField[] { Contratti.CONTRATTI.IDCONTRATTO }, true);
    public static final ForeignKey<OperatoriContrattiRecord, OperatoriRecord> FK_GESTIONE_CO2 = Internal.createForeignKey(OperatoriContratti.OPERATORI_CONTRATTI, DSL.name("FK_GESTIONE_CO2"), new TableField[] { OperatoriContratti.OPERATORI_CONTRATTI.IDOPERATORE }, Keys.KEY_OPERATORI_PRIMARY, new TableField[] { Operatori.OPERATORI.IDOPERATORE }, true);
    public static final ForeignKey<OperatoriLettureRecord, LettureRecord> FK_GESTIONE_LC = Internal.createForeignKey(OperatoriLetture.OPERATORI_LETTURE, DSL.name("FK_GESTIONE_LC"), new TableField[] { OperatoriLetture.OPERATORI_LETTURE.LETTURA }, Keys.KEY_LETTURE_PRIMARY, new TableField[] { Letture.LETTURE.NUMEROLETTURA }, true);
    public static final ForeignKey<OperatoriLettureRecord, OperatoriRecord> FK_GESTIONE_LO = Internal.createForeignKey(OperatoriLetture.OPERATORI_LETTURE, DSL.name("FK_GESTIONE_LO"), new TableField[] { OperatoriLetture.OPERATORI_LETTURE.IDOPERATORE }, Keys.KEY_OPERATORI_PRIMARY, new TableField[] { Operatori.OPERATORI.IDOPERATORE }, true);
    public static final ForeignKey<PagamentiRecord, BolletteRecord> FK_PAGAMENTO = Internal.createForeignKey(Pagamenti.PAGAMENTI, DSL.name("FK_PAGAMENTO"), new TableField[] { Pagamenti.PAGAMENTI.NUMEROBOLLETTA }, Keys.KEY_BOLLETTE_PRIMARY, new TableField[] { Bollette.BOLLETTE.NUMEROBOLLETTA }, true);
}
